name: Release
on:
  release:
    types: [published]
jobs:
  push-to-registry:
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=ghcr.io/naari3/chordium
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [ "${{ github.event_name }}" = "push" ]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  update-manifest:
    name: Update manifest files
    runs-on: ubuntu-latest
    needs: [push-to-registry]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=ghcr.io/naari3/chordium
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [ "${{ github.event_name }}" = "push" ]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
      - uses: imranismail/setup-kustomize@v1
        with:
          kustomize-version: "4.0.5"
      - name: Clone manifest repository
        run: git clone https://x-access-token:${{ secrets.BOT_POOL_TOKEN }}@github.com/naari3/bot-pool-manifest.git ~/bot-pool-manifest
      - name: Push manifest with new image
        run: |
          cd ~/bot-pool-manifest/chordium
          git checkout -b gitops-chordium-${{ steps.prep.outputs.version }}
          kustomize edit set image ${{ steps.prep.outputs.tags }}
          git config --global user.name "GitHub Action"
          git config --global user.email "github-actions@github.com"
          git add .
          git commit -m "Set chordium image tag to ${{ steps.prep.outputs.version }}"
          git push -f origin gitops-chordium-${{ steps.prep.outputs.version }}
      - name: Create pull request
        run: |
          cd ~/bot-pool-manifest
          gh pr create \
            -t "Deploy a new image chordium:${{ steps.prep.outputs.version }}" \
            -b "This is auto-generated pull request from https://github.com/${{ github.repository }}/commit/${{ github.sha }} by Github Actions"
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_POOL_TOKEN }}
